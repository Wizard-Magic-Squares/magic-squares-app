{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Wizardworks\\\\magic-squares-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [squares, setSquares] = useState([]);\n  const addSquare = () => {\n    const randomColor = '#' + Math.floor(Math.random() * 16777215).toString(16);\n    setSquares([...squares, {\n      color: randomColor\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addSquare,\n      children: \"L\\xE4gg till ruta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square-container\",\n      children: squares.map((square, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"square\",\n        style: {\n          backgroundColor: square.color,\n          width: '50px',\n          height: '50px',\n          margin: '5px',\n          display: 'inline-block'\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NEIoD6bRl4K14ROd8WisLnBpVR4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","squares","setSquares","addSquare","randomColor","Math","floor","random","toString","color","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","square","index","style","backgroundColor","width","height","margin","display","_c","$RefreshReg$"],"sources":["C:/Projects/Wizardworks/magic-squares-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\n\nfunction App() {\n  const [squares, setSquares] = useState([]);\n\n  const addSquare = () => {\n    const randomColor = '#' + Math.floor(Math.random() * 16777215).toString(16);\n    setSquares([...squares, { color: randomColor }]);\n  };\n\n  return (\n    <div className=\"App\">\n      {/* Button with Swedish text */}\n      <button onClick={addSquare}>LÃ¤gg till ruta</button>\n      <div className=\"square-container\">\n        {squares.map((square, index) => (\n          <div\n            key={index}\n            className=\"square\"\n            style={{ backgroundColor: square.color, width: '50px', height: '50px', margin: '5px', display: 'inline-block' }}\n          ></div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMO,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,WAAW,GAAG,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC;IAC3EN,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE;MAAEQ,KAAK,EAAEL;IAAY,CAAC,CAAC,CAAC;EAClD,CAAC;EAED,oBACEN,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAElBb,OAAA;MAAQc,OAAO,EAAET,SAAU;MAAAQ,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnDlB,OAAA;MAAKY,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC9BV,OAAO,CAACgB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBrB,OAAA;QAEEY,SAAS,EAAC,QAAQ;QAClBU,KAAK,EAAE;UAAEC,eAAe,EAAEH,MAAM,CAACT,KAAK;UAAEa,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE,MAAM;UAAEC,MAAM,EAAE,KAAK;UAAEC,OAAO,EAAE;QAAe;MAAE,GAF3GN,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGN,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CAvBQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}