{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Wizardworks\\\\magic-squares-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [squares, setSquares] = useState([]);\n  const size = 30; // size of each square\n  const squaresPerRow = 2; // Number of squares in each row before switching to columns\n\n  const addSquare = () => {\n    fetch(\"https://localhost:7044/api/square/randomcolor\").then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      const newSquare = {\n        color: data.color\n      };\n      setSquares([...squares, newSquare]);\n    }).catch(error => {\n      console.error(\"There was an error fetching the color!\", error);\n    });\n  };\n  const calculateGridStyle = () => {\n    let rows = Math.floor(Math.sqrt(squares.length));\n    let cols = Math.ceil(Math.sqrt(squares.length));\n\n    // Ensure that rows and columns are balanced.\n    if (squares.length % cols === 0) {\n      rows = cols;\n    }\n    return {\n      gridTemplateColumns: `repeat(${cols}, ${size}px)`,\n      gridTemplateRows: `repeat(${rows}, ${size}px)`\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square-container\",\n      style: calculateGridStyle(),\n      children: squares.map((square, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"square\",\n        style: {\n          backgroundColor: square.color,\n          width: `${size}px`,\n          height: `${size}px`\n        } // Set size dynamically\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-btn\",\n      onClick: addSquare,\n      children: \"L\\xE4gg till en ruta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NEIoD6bRl4K14ROd8WisLnBpVR4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","squares","setSquares","size","squaresPerRow","addSquare","fetch","then","response","ok","Error","json","data","newSquare","color","catch","error","console","calculateGridStyle","rows","Math","floor","sqrt","length","cols","ceil","gridTemplateColumns","gridTemplateRows","className","children","style","map","square","index","backgroundColor","width","height","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Projects/Wizardworks/magic-squares-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\n\nfunction App() {\n  const [squares, setSquares] = useState([]);\n  const size = 30; // size of each square\n  const squaresPerRow = 2; // Number of squares in each row before switching to columns\n\n  const addSquare = () => {\n    fetch(\"https://localhost:7044/api/square/randomcolor\")\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        const newSquare = {\n          color: data.color,\n        };\n        setSquares([...squares, newSquare]);\n      })\n      .catch(error => {\n        console.error(\"There was an error fetching the color!\", error);\n      });\n  };\n\n  const calculateGridStyle = () => {\n    let rows = Math.floor(Math.sqrt(squares.length));\n    let cols = Math.ceil(Math.sqrt(squares.length));\n\n    // Ensure that rows and columns are balanced.\n    if (squares.length % cols === 0) {\n      rows = cols;\n    }\n    \n    return {\n      gridTemplateColumns: `repeat(${cols}, ${size}px)`,\n      gridTemplateRows: `repeat(${rows}, ${size}px)`\n    };\n  };\n\n  return (\n    <div className=\"App\">\n      <div\n        className=\"square-container\"\n        style={calculateGridStyle()}\n      >\n        {squares.map((square, index) => (\n          <div\n            key={index}\n            className=\"square\"\n            style={{ backgroundColor: square.color, width: `${size}px`, height: `${size}px` }} // Set size dynamically\n          ></div>\n        ))}\n      </div>\n      <button className=\"add-btn\" onClick={addSquare}>LÃ¤gg till en ruta</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMO,IAAI,GAAG,EAAE,CAAC,CAAC;EACjB,MAAMC,aAAa,GAAG,CAAC,CAAC,CAAC;;EAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBC,KAAK,CAAC,+CAA+C,CAAC,CACnDC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZ,MAAMC,SAAS,GAAG;QAChBC,KAAK,EAAEF,IAAI,CAACE;MACd,CAAC;MACDZ,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEY,SAAS,CAAC,CAAC;IACrC,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAChE,CAAC,CAAC;EACN,CAAC;EAED,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,IAAI,CAACrB,OAAO,CAACsB,MAAM,CAAC,CAAC;IAChD,IAAIC,IAAI,GAAGJ,IAAI,CAACK,IAAI,CAACL,IAAI,CAACE,IAAI,CAACrB,OAAO,CAACsB,MAAM,CAAC,CAAC;;IAE/C;IACA,IAAItB,OAAO,CAACsB,MAAM,GAAGC,IAAI,KAAK,CAAC,EAAE;MAC/BL,IAAI,GAAGK,IAAI;IACb;IAEA,OAAO;MACLE,mBAAmB,EAAE,UAAUF,IAAI,KAAKrB,IAAI,KAAK;MACjDwB,gBAAgB,EAAE,UAAUR,IAAI,KAAKhB,IAAI;IAC3C,CAAC;EACH,CAAC;EAED,oBACEL,OAAA;IAAK8B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB/B,OAAA;MACE8B,SAAS,EAAC,kBAAkB;MAC5BE,KAAK,EAAEZ,kBAAkB,CAAC,CAAE;MAAAW,QAAA,EAE3B5B,OAAO,CAAC8B,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBnC,OAAA;QAEE8B,SAAS,EAAC,QAAQ;QAClBE,KAAK,EAAE;UAAEI,eAAe,EAAEF,MAAM,CAAClB,KAAK;UAAEqB,KAAK,EAAE,GAAGhC,IAAI,IAAI;UAAEiC,MAAM,EAAE,GAAGjC,IAAI;QAAK,CAAE,CAAC;MAAA,GAF9E8B,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGN,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN1C,OAAA;MAAQ8B,SAAS,EAAC,SAAS;MAACa,OAAO,EAAEpC,SAAU;MAAAwB,QAAA,EAAC;IAAiB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV;AAACxC,EAAA,CAxDQD,GAAG;AAAA2C,EAAA,GAAH3C,GAAG;AA0DZ,eAAeA,GAAG;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}